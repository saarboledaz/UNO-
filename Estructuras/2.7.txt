import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner e = new Scanner(System.in);
        LinkedList<Integer> l = new LinkedList<>();
        int n = e.nextInt();
        int k = e.nextInt();
        int t =0;
        for (int i = 0; i < n; i++) {
            l.add(e.nextInt());
        }
        l = josephus(l,k);
        for (int i = 0; i < n-1; i++) {
            t+=Math.abs(l.getLast() - l.get(i));
        }
        System.out.println(t);

    }

    static LinkedList<Integer> josephus(LinkedList<Integer> p, int step) {
        int start = 2;
        int N = p.size();
        LinkedList<Integer> r = new LinkedList<Integer>();
        int i = (start - 2) % N;
        for (int j = N; j > 0; j--) {
            i = (i + step) % N--;
            r.add(p.remove(i--));
        }

        return r;
    }
}